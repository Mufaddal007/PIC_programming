;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22-Jun-21 6:41:17 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2818      	GOTO       24
_Interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;timer0module.c,4 :: 		void Interrupt(){
;timer0module.c,5 :: 		if (TMR0IF_bit){
0x000B	0x1D0B      	BTFSS      TMR0IF_bit, BitPos(TMR0IF_bit+0)
0x000C	0x2811      	GOTO       L_Interrupt0
;timer0module.c,6 :: 		TMR0IF_bit	 = 0;
0x000D	0x110B      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;timer0module.c,7 :: 		TMR0 = 61;
0x000E	0x303D      	MOVLW      61
0x000F	0x0081      	MOVWF      TMR0
;timer0module.c,8 :: 		value++;
0x0010	0x0AA3      	INCF       _value, 1
;timer0module.c,9 :: 		}
L_Interrupt0:
;timer0module.c,10 :: 		}
L_end_Interrupt:
L__Interrupt5:
0x0011	0x0825      	MOVF       ___savePCLATH, 0
0x0012	0x008A      	MOVWF      PCLATH
0x0013	0x0E24      	SWAPF      ___saveSTATUS, 0
0x0014	0x0083      	MOVWF      STATUS
0x0015	0x0EFF      	SWAPF      R15, 1
0x0016	0x0E7F      	SWAPF      R15, 0
0x0017	0x0009      	RETFIE
; end of _Interrupt
_main:
;timer0module.c,12 :: 		void main() {
;timer0module.c,13 :: 		state=0;
0x0018	0x1283      	BCF        STATUS, 5
0x0019	0x1303      	BCF        STATUS, 6
0x001A	0x1022      	BCF        _state, BitPos(_state+0)
;timer0module.c,14 :: 		value=0;
0x001B	0x01A3      	CLRF       _value
;timer0module.c,15 :: 		trisb.rb0=0;
0x001C	0x1683      	BSF        STATUS, 5
0x001D	0x1006      	BCF        TRISB, 0
;timer0module.c,16 :: 		OPTION_REG	 = 0x87;
0x001E	0x3087      	MOVLW      135
0x001F	0x0081      	MOVWF      OPTION_REG
;timer0module.c,17 :: 		TMR0		 = 61;
0x0020	0x303D      	MOVLW      61
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x0081      	MOVWF      TMR0
;timer0module.c,18 :: 		INTCON	 = 0xA0;
0x0023	0x30A0      	MOVLW      160
0x0024	0x008B      	MOVWF      INTCON
;timer0module.c,20 :: 		while(1)
L_main1:
;timer0module.c,22 :: 		if (value==20)
0x0025	0x0823      	MOVF       _value, 0
0x0026	0x3A14      	XORLW      20
0x0027	0x1D03      	BTFSS      STATUS, 2
0x0028	0x283A      	GOTO       L_main3
;timer0module.c,24 :: 		value=0;
0x0029	0x01A3      	CLRF       _value
;timer0module.c,25 :: 		state=1-state;
0x002A	0x01F0      	CLRF       R0
0x002B	0x1822      	BTFSC      _state, BitPos(_state+0)
0x002C	0x0AF0      	INCF       R0, 1
0x002D	0x0870      	MOVF       R0, 0
0x002E	0x3C01      	SUBLW      1
0x002F	0x00F0      	MOVWF      R0
0x0030	0x1870      	BTFSC      R0, 0
0x0031	0x2834      	GOTO       L__main7
0x0032	0x1022      	BCF        _state, BitPos(_state+0)
0x0033	0x2835      	GOTO       L__main8
L__main7:
0x0034	0x1422      	BSF        _state, BitPos(_state+0)
L__main8:
;timer0module.c,26 :: 		portb.rb0=state;
0x0035	0x1822      	BTFSC      _state, BitPos(_state+0)
0x0036	0x2839      	GOTO       L__main9
0x0037	0x1006      	BCF        PORTB, 0
0x0038	0x283A      	GOTO       L__main10
L__main9:
0x0039	0x1406      	BSF        PORTB, 0
L__main10:
;timer0module.c,27 :: 		}
L_main3:
;timer0module.c,28 :: 		}
0x003A	0x2825      	GOTO       L_main1
;timer0module.c,29 :: 		}
L_end_main:
0x003B	0x283B      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [20]    _Interrupt
0x0018      [36]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [0]    TMR0IF_bit
0x000B       [1]    INTCON
0x0020       [2]    ___DoICPAddr
0x0022       [0]    _state
0x0023       [1]    _value
0x0024       [1]    ___saveSTATUS
0x0025       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
