;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23-Dec-20 7:23:30 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A84      	GOTO       644
_Interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00CB      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00CC      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A2      	MOVWF      34
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A1      	MOVWF      33
0x000F	0x0872      	MOVF       R2, 0
0x0010	0x00A0      	MOVWF      32
;ir.c,24 :: 		void Interrupt() {
;ir.c,25 :: 		if (RBIF_bit && (PORTB.F0 || !PORTB.F0)){         // PORTB change ISR
0x0011	0x1C0B      	BTFSS      RBIF_bit, BitPos(RBIF_bit+0)
0x0012	0x28FE      	GOTO       L_Interrupt4
0x0013	0x1806      	BTFSC      PORTB, 0
0x0014	0x2818      	GOTO       L__Interrupt44
0x0015	0x1C06      	BTFSS      PORTB, 0
0x0016	0x2818      	GOTO       L__Interrupt44
0x0017	0x28FE      	GOTO       L_Interrupt4
L__Interrupt44:
L__Interrupt43:
;ir.c,26 :: 		RBIF_bit = 0;
0x0018	0x100B      	BCF        RBIF_bit, BitPos(RBIF_bit+0)
;ir.c,27 :: 		if(rc5_state != 0){
0x0019	0x0848      	MOVF       _rc5_state, 0
0x001A	0x3A00      	XORLW      0
0x001B	0x1903      	BTFSC      STATUS, 2
0x001C	0x2826      	GOTO       L_Interrupt5
;ir.c,28 :: 		timer_value = (TMR1H << 8) + TMR1L;           // Store Timer1 value
0x001D	0x080F      	MOVF       TMR1H, 0
0x001E	0x00C6      	MOVWF      _timer_value+1
0x001F	0x01C5      	CLRF       _timer_value
0x0020	0x080E      	MOVF       TMR1L, 0
0x0021	0x07C5      	ADDWF      _timer_value, 1
0x0022	0x1803      	BTFSC      STATUS, 0
0x0023	0x0AC6      	INCF       _timer_value+1, 1
;ir.c,29 :: 		TMR1H = 0;                                    // Reset Timer1
0x0024	0x018F      	CLRF       TMR1H
;ir.c,30 :: 		TMR1L = 0;
0x0025	0x018E      	CLRF       TMR1L
;ir.c,31 :: 		}
L_Interrupt5:
;ir.c,32 :: 		switch(rc5_state){
0x0026	0x28EA      	GOTO       L_Interrupt6
;ir.c,33 :: 		case 0 :                                       // Start receiving IR data (initially we're at the beginning of mid1)
L_Interrupt8:
;ir.c,34 :: 		TMR1H = 0;                                   // Reset Timer1
0x0027	0x018F      	CLRF       TMR1H
;ir.c,35 :: 		TMR1L = 0;
0x0028	0x018E      	CLRF       TMR1L
;ir.c,36 :: 		TMR1ON_bit = 1;                              // Enable Timer1
0x0029	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,37 :: 		rc5_state = 1;                               // Next state: end of mid1
0x002A	0x3001      	MOVLW      1
0x002B	0x00C8      	MOVWF      _rc5_state
;ir.c,38 :: 		i = 0;
0x002C	0x01C4      	CLRF       _i
;ir.c,39 :: 		break;
0x002D	0x28FE      	GOTO       L_Interrupt7
;ir.c,40 :: 		case 1 :                                       // End of mid1 ==> check if we're at the beginning of start1 or mid0
L_Interrupt9:
;ir.c,41 :: 		if((timer_value > long_time) || (timer_value < short_time)){         // Invalid interval ==> stop decoding and reset
0x002E	0x0846      	MOVF       _timer_value+1, 0
0x002F	0x3C07      	SUBLW      7
0x0030	0x1D03      	BTFSS      STATUS, 2
0x0031	0x2834      	GOTO       L__Interrupt47
0x0032	0x0845      	MOVF       _timer_value, 0
0x0033	0x3CD0      	SUBLW      208
L__Interrupt47:
0x0034	0x1C03      	BTFSS      STATUS, 0
0x0035	0x283F      	GOTO       L__Interrupt42
0x0036	0x3002      	MOVLW      2
0x0037	0x0246      	SUBWF      _timer_value+1, 0
0x0038	0x1D03      	BTFSS      STATUS, 2
0x0039	0x283C      	GOTO       L__Interrupt48
0x003A	0x30BC      	MOVLW      188
0x003B	0x0245      	SUBWF      _timer_value, 0
L__Interrupt48:
0x003C	0x1C03      	BTFSS      STATUS, 0
0x003D	0x283F      	GOTO       L__Interrupt42
0x003E	0x2842      	GOTO       L_Interrupt12
L__Interrupt42:
;ir.c,42 :: 		rc5_state = 0;                             // Reset decoding process
0x003F	0x01C8      	CLRF       _rc5_state
;ir.c,43 :: 		TMR1ON_bit = 0;                            // Disable Timer1
0x0040	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,44 :: 		break;
0x0041	0x28FE      	GOTO       L_Interrupt7
;ir.c,45 :: 		}
L_Interrupt12:
;ir.c,46 :: 		rc5_code |= 1 << (13 - i);                   // Set bit (13 - i)
0x0042	0x0844      	MOVF       _i, 0
0x0043	0x3C0D      	SUBLW      13
0x0044	0x00F0      	MOVWF      R0
0x0045	0x01F1      	CLRF       R0+1
0x0046	0x1C03      	BTFSS      STATUS, 0
0x0047	0x03F1      	DECF       R0+1, 1
0x0048	0x0870      	MOVF       R0, 0
0x0049	0x00F2      	MOVWF      R2
0x004A	0x3001      	MOVLW      1
0x004B	0x00F0      	MOVWF      R0
0x004C	0x3000      	MOVLW      0
0x004D	0x00F1      	MOVWF      R0+1
0x004E	0x0872      	MOVF       R2, 0
L__Interrupt49:
0x004F	0x1903      	BTFSC      STATUS, 2
0x0050	0x2856      	GOTO       L__Interrupt50
0x0051	0x0DF0      	RLF        R0, 1
0x0052	0x0DF1      	RLF        R0+1, 1
0x0053	0x1070      	BCF        R0, 0
0x0054	0x3EFF      	ADDLW      255
0x0055	0x284F      	GOTO       L__Interrupt49
L__Interrupt50:
0x0056	0x0870      	MOVF       R0, 0
0x0057	0x04C9      	IORWF      _rc5_code, 1
0x0058	0x0871      	MOVF       R0+1, 0
0x0059	0x04CA      	IORWF      _rc5_code+1, 1
;ir.c,47 :: 		i++;
0x005A	0x0AC4      	INCF       _i, 1
;ir.c,48 :: 		if(i > 13){                                  // If all bits are received
0x005B	0x0844      	MOVF       _i, 0
0x005C	0x3C0D      	SUBLW      13
0x005D	0x1803      	BTFSC      STATUS, 0
0x005E	0x2862      	GOTO       L_Interrupt13
;ir.c,49 :: 		rc5_ok = 1;                                // Decoding process is OK
0x005F	0x143F      	BSF        _rc5_ok, BitPos(_rc5_ok+0)
;ir.c,50 :: 		RBIE_bit = 0;                              // Disable PORTB change interrupt
0x0060	0x118B      	BCF        RBIE_bit, BitPos(RBIE_bit+0)
;ir.c,51 :: 		break;
0x0061	0x28FE      	GOTO       L_Interrupt7
;ir.c,52 :: 		}
L_Interrupt13:
;ir.c,53 :: 		if(timer_value > med_time){                  // We're at the beginning of mid0
0x0062	0x0846      	MOVF       _timer_value+1, 0
0x0063	0x3C04      	SUBLW      4
0x0064	0x1D03      	BTFSS      STATUS, 2
0x0065	0x2868      	GOTO       L__Interrupt51
0x0066	0x0845      	MOVF       _timer_value, 0
0x0067	0x3CB0      	SUBLW      176
L__Interrupt51:
0x0068	0x1803      	BTFSC      STATUS, 0
0x0069	0x2875      	GOTO       L_Interrupt14
;ir.c,54 :: 		rc5_state = 2;                             // Next state: end of mid0
0x006A	0x3002      	MOVLW      2
0x006B	0x00C8      	MOVWF      _rc5_state
;ir.c,55 :: 		if(i == 13){                               // If we're at the LSB bit
0x006C	0x0844      	MOVF       _i, 0
0x006D	0x3A0D      	XORLW      13
0x006E	0x1D03      	BTFSS      STATUS, 2
0x006F	0x2874      	GOTO       L_Interrupt15
;ir.c,56 :: 		rc5_ok = 1;                              // Decoding process is OK
0x0070	0x143F      	BSF        _rc5_ok, BitPos(_rc5_ok+0)
;ir.c,57 :: 		rc5_code &= ~1;                          // Clear the LSB bit
0x0071	0x1049      	BCF        _rc5_code, 0
;ir.c,58 :: 		RBIE_bit = 0;                            // Disable PORTB change interrupt
0x0072	0x118B      	BCF        RBIE_bit, BitPos(RBIE_bit+0)
;ir.c,59 :: 		break;
0x0073	0x28FE      	GOTO       L_Interrupt7
;ir.c,60 :: 		}
L_Interrupt15:
;ir.c,61 :: 		}
0x0074	0x2877      	GOTO       L_Interrupt16
L_Interrupt14:
;ir.c,63 :: 		rc5_state = 3;                             // Next state: end of start1
0x0075	0x3003      	MOVLW      3
0x0076	0x00C8      	MOVWF      _rc5_state
L_Interrupt16:
;ir.c,64 :: 		break;
0x0077	0x28FE      	GOTO       L_Interrupt7
;ir.c,65 :: 		case 2 :                                       // End of mid0 ==> check if we're at the beginning of start0 or mid1
L_Interrupt17:
;ir.c,66 :: 		if((timer_value > long_time) || (timer_value < short_time)){
0x0078	0x0846      	MOVF       _timer_value+1, 0
0x0079	0x3C07      	SUBLW      7
0x007A	0x1D03      	BTFSS      STATUS, 2
0x007B	0x287E      	GOTO       L__Interrupt52
0x007C	0x0845      	MOVF       _timer_value, 0
0x007D	0x3CD0      	SUBLW      208
L__Interrupt52:
0x007E	0x1C03      	BTFSS      STATUS, 0
0x007F	0x2889      	GOTO       L__Interrupt41
0x0080	0x3002      	MOVLW      2
0x0081	0x0246      	SUBWF      _timer_value+1, 0
0x0082	0x1D03      	BTFSS      STATUS, 2
0x0083	0x2886      	GOTO       L__Interrupt53
0x0084	0x30BC      	MOVLW      188
0x0085	0x0245      	SUBWF      _timer_value, 0
L__Interrupt53:
0x0086	0x1C03      	BTFSS      STATUS, 0
0x0087	0x2889      	GOTO       L__Interrupt41
0x0088	0x288C      	GOTO       L_Interrupt20
L__Interrupt41:
;ir.c,67 :: 		rc5_state = 0;                             // Reset decoding process
0x0089	0x01C8      	CLRF       _rc5_state
;ir.c,68 :: 		TMR1ON_bit = 0;                            // Disable Timer1
0x008A	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,69 :: 		break;
0x008B	0x28FE      	GOTO       L_Interrupt7
;ir.c,70 :: 		}
L_Interrupt20:
;ir.c,71 :: 		rc5_code &= ~(1 << (13 - i));                // Clear (13 - i)
0x008C	0x0844      	MOVF       _i, 0
0x008D	0x3C0D      	SUBLW      13
0x008E	0x00F0      	MOVWF      R0
0x008F	0x01F1      	CLRF       R0+1
0x0090	0x1C03      	BTFSS      STATUS, 0
0x0091	0x03F1      	DECF       R0+1, 1
0x0092	0x0870      	MOVF       R0, 0
0x0093	0x00F2      	MOVWF      R2
0x0094	0x3001      	MOVLW      1
0x0095	0x00F0      	MOVWF      R0
0x0096	0x3000      	MOVLW      0
0x0097	0x00F1      	MOVWF      R0+1
0x0098	0x0872      	MOVF       R2, 0
L__Interrupt54:
0x0099	0x1903      	BTFSC      STATUS, 2
0x009A	0x28A0      	GOTO       L__Interrupt55
0x009B	0x0DF0      	RLF        R0, 1
0x009C	0x0DF1      	RLF        R0+1, 1
0x009D	0x1070      	BCF        R0, 0
0x009E	0x3EFF      	ADDLW      255
0x009F	0x2899      	GOTO       L__Interrupt54
L__Interrupt55:
0x00A0	0x09F0      	COMF       R0, 1
0x00A1	0x09F1      	COMF       R0+1, 1
0x00A2	0x0870      	MOVF       R0, 0
0x00A3	0x05C9      	ANDWF      _rc5_code, 1
0x00A4	0x0871      	MOVF       R0+1, 0
0x00A5	0x05CA      	ANDWF      _rc5_code+1, 1
;ir.c,72 :: 		i++;
0x00A6	0x0AC4      	INCF       _i, 1
;ir.c,73 :: 		if(timer_value > med_time)                   // We're at the beginning of mid1
0x00A7	0x0846      	MOVF       _timer_value+1, 0
0x00A8	0x3C04      	SUBLW      4
0x00A9	0x1D03      	BTFSS      STATUS, 2
0x00AA	0x28AD      	GOTO       L__Interrupt56
0x00AB	0x0845      	MOVF       _timer_value, 0
0x00AC	0x3CB0      	SUBLW      176
L__Interrupt56:
0x00AD	0x1803      	BTFSC      STATUS, 0
0x00AE	0x28B2      	GOTO       L_Interrupt21
;ir.c,74 :: 		rc5_state = 1;                             // Next state: end of mid1
0x00AF	0x3001      	MOVLW      1
0x00B0	0x00C8      	MOVWF      _rc5_state
0x00B1	0x28B4      	GOTO       L_Interrupt22
L_Interrupt21:
;ir.c,76 :: 		rc5_state = 4;                             // Next state: end of start0
0x00B2	0x3004      	MOVLW      4
0x00B3	0x00C8      	MOVWF      _rc5_state
L_Interrupt22:
;ir.c,77 :: 		break;
0x00B4	0x28FE      	GOTO       L_Interrupt7
;ir.c,78 :: 		case 3 :                                       // End of start1 ==> check if we're at the beginning of mid1
L_Interrupt23:
;ir.c,79 :: 		if((timer_value > med_time) || (timer_value < short_time)){           // Time interval invalid ==> stop decoding
0x00B5	0x0846      	MOVF       _timer_value+1, 0
0x00B6	0x3C04      	SUBLW      4
0x00B7	0x1D03      	BTFSS      STATUS, 2
0x00B8	0x28BB      	GOTO       L__Interrupt57
0x00B9	0x0845      	MOVF       _timer_value, 0
0x00BA	0x3CB0      	SUBLW      176
L__Interrupt57:
0x00BB	0x1C03      	BTFSS      STATUS, 0
0x00BC	0x28C6      	GOTO       L__Interrupt40
0x00BD	0x3002      	MOVLW      2
0x00BE	0x0246      	SUBWF      _timer_value+1, 0
0x00BF	0x1D03      	BTFSS      STATUS, 2
0x00C0	0x28C3      	GOTO       L__Interrupt58
0x00C1	0x30BC      	MOVLW      188
0x00C2	0x0245      	SUBWF      _timer_value, 0
L__Interrupt58:
0x00C3	0x1C03      	BTFSS      STATUS, 0
0x00C4	0x28C6      	GOTO       L__Interrupt40
0x00C5	0x28C9      	GOTO       L_Interrupt26
L__Interrupt40:
;ir.c,80 :: 		TMR1ON_bit = 0;                            // Disable Timer1
0x00C6	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,81 :: 		rc5_state = 0;                             // Reset decoding process
0x00C7	0x01C8      	CLRF       _rc5_state
;ir.c,82 :: 		break;
0x00C8	0x28FE      	GOTO       L_Interrupt7
;ir.c,83 :: 		}
L_Interrupt26:
;ir.c,85 :: 		rc5_state = 1;                             // Next state: end of mid1
0x00C9	0x3001      	MOVLW      1
0x00CA	0x00C8      	MOVWF      _rc5_state
;ir.c,86 :: 		break;
0x00CB	0x28FE      	GOTO       L_Interrupt7
;ir.c,87 :: 		case 4 :                                       // End of start0 ==> check if we're at the beginning of mid0
L_Interrupt28:
;ir.c,88 :: 		if((timer_value > med_time) || (timer_value < short_time)){           // Time interval invalid ==> stop decoding
0x00CC	0x0846      	MOVF       _timer_value+1, 0
0x00CD	0x3C04      	SUBLW      4
0x00CE	0x1D03      	BTFSS      STATUS, 2
0x00CF	0x28D2      	GOTO       L__Interrupt59
0x00D0	0x0845      	MOVF       _timer_value, 0
0x00D1	0x3CB0      	SUBLW      176
L__Interrupt59:
0x00D2	0x1C03      	BTFSS      STATUS, 0
0x00D3	0x28DD      	GOTO       L__Interrupt39
0x00D4	0x3002      	MOVLW      2
0x00D5	0x0246      	SUBWF      _timer_value+1, 0
0x00D6	0x1D03      	BTFSS      STATUS, 2
0x00D7	0x28DA      	GOTO       L__Interrupt60
0x00D8	0x30BC      	MOVLW      188
0x00D9	0x0245      	SUBWF      _timer_value, 0
L__Interrupt60:
0x00DA	0x1C03      	BTFSS      STATUS, 0
0x00DB	0x28DD      	GOTO       L__Interrupt39
0x00DC	0x28E0      	GOTO       L_Interrupt31
L__Interrupt39:
;ir.c,89 :: 		TMR1ON_bit = 0;                            // Disable Timer1
0x00DD	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,90 :: 		rc5_state = 0;                             // Reset decoding process
0x00DE	0x01C8      	CLRF       _rc5_state
;ir.c,91 :: 		break;
0x00DF	0x28FE      	GOTO       L_Interrupt7
;ir.c,92 :: 		}
L_Interrupt31:
;ir.c,94 :: 		rc5_state = 2;                             // Next state: end of mid0
0x00E0	0x3002      	MOVLW      2
0x00E1	0x00C8      	MOVWF      _rc5_state
;ir.c,95 :: 		if(i == 13){                                 // If we're at the LSB bit
0x00E2	0x0844      	MOVF       _i, 0
0x00E3	0x3A0D      	XORLW      13
0x00E4	0x1D03      	BTFSS      STATUS, 2
0x00E5	0x28E9      	GOTO       L_Interrupt33
;ir.c,96 :: 		rc5_ok = 1;                                // Decoding process is OK
0x00E6	0x143F      	BSF        _rc5_ok, BitPos(_rc5_ok+0)
;ir.c,97 :: 		rc5_code &= ~1;                            // Clear the LSB bit
0x00E7	0x1049      	BCF        _rc5_code, 0
;ir.c,98 :: 		RBIE_bit = 0;                              // Disable PORTB change interrupt
0x00E8	0x118B      	BCF        RBIE_bit, BitPos(RBIE_bit+0)
;ir.c,99 :: 		}
L_Interrupt33:
;ir.c,100 :: 		}
0x00E9	0x28FE      	GOTO       L_Interrupt7
L_Interrupt6:
0x00EA	0x0848      	MOVF       _rc5_state, 0
0x00EB	0x3A00      	XORLW      0
0x00EC	0x1903      	BTFSC      STATUS, 2
0x00ED	0x2827      	GOTO       L_Interrupt8
0x00EE	0x0848      	MOVF       _rc5_state, 0
0x00EF	0x3A01      	XORLW      1
0x00F0	0x1903      	BTFSC      STATUS, 2
0x00F1	0x282E      	GOTO       L_Interrupt9
0x00F2	0x0848      	MOVF       _rc5_state, 0
0x00F3	0x3A02      	XORLW      2
0x00F4	0x1903      	BTFSC      STATUS, 2
0x00F5	0x2878      	GOTO       L_Interrupt17
0x00F6	0x0848      	MOVF       _rc5_state, 0
0x00F7	0x3A03      	XORLW      3
0x00F8	0x1903      	BTFSC      STATUS, 2
0x00F9	0x28B5      	GOTO       L_Interrupt23
0x00FA	0x0848      	MOVF       _rc5_state, 0
0x00FB	0x3A04      	XORLW      4
0x00FC	0x1903      	BTFSC      STATUS, 2
0x00FD	0x28CC      	GOTO       L_Interrupt28
L_Interrupt7:
;ir.c,101 :: 		}
L_Interrupt4:
;ir.c,102 :: 		if (TMR1IF_bit){                 // Timer1 ISR
0x00FE	0x1C0C      	BTFSS      TMR1IF_bit, BitPos(TMR1IF_bit+0)
0x00FF	0x2903      	GOTO       L_Interrupt34
;ir.c,103 :: 		TMR1IF_bit = 0;                // Clear Timer1 overflow flag bit
0x0100	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;ir.c,104 :: 		rc5_state = 0;                 // Reset decoding process
0x0101	0x01C8      	CLRF       _rc5_state
;ir.c,105 :: 		TMR1ON_bit = 0;                // Disable Timer1
0x0102	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,106 :: 		}
L_Interrupt34:
;ir.c,107 :: 		}
L_end_Interrupt:
L__Interrupt46:
0x0103	0x0822      	MOVF       34, 0
0x0104	0x00F0      	MOVWF      R0
0x0105	0x0821      	MOVF       33, 0
0x0106	0x00F1      	MOVWF      R1
0x0107	0x0820      	MOVF       32, 0
0x0108	0x00F2      	MOVWF      R2
0x0109	0x084C      	MOVF       ___savePCLATH, 0
0x010A	0x008A      	MOVWF      PCLATH
0x010B	0x0E4B      	SWAPF      ___saveSTATUS, 0
0x010C	0x0083      	MOVWF      STATUS
0x010D	0x0EFF      	SWAPF      R15, 1
0x010E	0x0E7F      	SWAPF      R15, 0
0x010F	0x0009      	RETFIE
; end of _Interrupt
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0110	0x3053      	MOVLW      83
0x0111	0x1283      	BCF        STATUS, 5
0x0112	0x1303      	BCF        STATUS, 6
0x0113	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0114	0x0BFD      	DECFSZ     R13, 1
0x0115	0x2914      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0116	0x0008      	RETURN
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0117	0x0000      	NOP
0x0118	0x0000      	NOP
0x0119	0x0000      	NOP
0x011A	0x0000      	NOP
0x011B	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x011C	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x011D	0x3024      	MOVLW      36
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x1303      	BCF        STATUS, 6
0x0120	0x00FC      	MOVWF      R12
0x0121	0x30B5      	MOVLW      181
0x0122	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0123	0x0BFD      	DECFSZ     R13, 1
0x0124	0x2923      	GOTO       L_Delay_5500us5
0x0125	0x0BFC      	DECFSZ     R12, 1
0x0126	0x2923      	GOTO       L_Delay_5500us5
0x0127	0x0000      	NOP
0x0128	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0129	0x0008      	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x012A	0x1283      	BCF        STATUS, 5
0x012B	0x1303      	BCF        STATUS, 6
0x012C	0x1BD2      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x012D	0x2930      	GOTO       L__Lcd_Cmd21
0x012E	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x012F	0x2931      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0130	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0131	0x1B52      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0132	0x2935      	GOTO       L__Lcd_Cmd23
0x0133	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0134	0x2936      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0135	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0136	0x1AD2      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0137	0x293A      	GOTO       L__Lcd_Cmd25
0x0138	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0139	0x293B      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x013A	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x013B	0x1A52      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x013C	0x293F      	GOTO       L__Lcd_Cmd27
0x013D	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x013E	0x2940      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x013F	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0140	0x18BF      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0141	0x2944      	GOTO       L__Lcd_Cmd29
0x0142	0x1507      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0143	0x2945      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0144	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0145	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x0146	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0147	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0148	0x19D2      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0149	0x294C      	GOTO       L__Lcd_Cmd31
0x014A	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x014B	0x294D      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x014C	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x014D	0x1952      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x014E	0x2951      	GOTO       L__Lcd_Cmd33
0x014F	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0150	0x2952      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0151	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0152	0x18D2      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0153	0x2956      	GOTO       L__Lcd_Cmd35
0x0154	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0155	0x2957      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0156	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0157	0x1852      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0158	0x295B      	GOTO       L__Lcd_Cmd37
0x0159	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x015A	0x295C      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x015B	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x015C	0x18BF      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x015D	0x2960      	GOTO       L__Lcd_Cmd39
0x015E	0x1507      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x015F	0x2961      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0160	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0161	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x0162	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0163	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x0164	0x1CBF      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0165	0x2968      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0166	0x211D      	CALL       _Delay_5500us
0x0167	0x2969      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0168	0x2110      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0169	0x0008      	RETURN
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x016A	0x1283      	BCF        STATUS, 5
0x016B	0x1303      	BCF        STATUS, 6
0x016C	0x10BF      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x016D	0x0851      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x016E	0x00D2      	MOVWF      FARG_Lcd_Cmd_out_char
0x016F	0x212A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0170	0x14BF      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0171	0x0008      	RETURN
; end of _Lcd_Chr_CP
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0172	0x1283      	BCF        STATUS, 5
0x0173	0x1303      	BCF        STATUS, 6
0x0174	0x083E      	MOVF       ___DoICPAddr+1, 0
0x0175	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0176	0x083D      	MOVF       ___DoICPAddr, 0
0x0177	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0178	0x0008      	RETURN
; end of _____DoICP
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x0179	0x298B      	GOTO       L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x017A	0x3080      	MOVLW      128
0x017B	0x1283      	BCF        STATUS, 5
0x017C	0x1303      	BCF        STATUS, 6
0x017D	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x017E	0x299C      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x017F	0x30C0      	MOVLW      192
0x0180	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0181	0x299C      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x0182	0x3094      	MOVLW      148
0x0183	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0184	0x299C      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x0185	0x30D4      	MOVLW      212
0x0186	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0187	0x299C      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x0188	0x3080      	MOVLW      128
0x0189	0x00CD      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,72 :: 		
0x018A	0x299C      	GOTO       L_Lcd_Chr5
L_Lcd_Chr4:
0x018B	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x018C	0x3A01      	XORLW      1
0x018D	0x1903      	BTFSC      STATUS, 2
0x018E	0x297A      	GOTO       L_Lcd_Chr6
0x018F	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x0190	0x3A02      	XORLW      2
0x0191	0x1903      	BTFSC      STATUS, 2
0x0192	0x297F      	GOTO       L_Lcd_Chr7
0x0193	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x0194	0x3A03      	XORLW      3
0x0195	0x1903      	BTFSC      STATUS, 2
0x0196	0x2982      	GOTO       L_Lcd_Chr8
0x0197	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x0198	0x3A04      	XORLW      4
0x0199	0x1903      	BTFSC      STATUS, 2
0x019A	0x2985      	GOTO       L_Lcd_Chr9
0x019B	0x2988      	GOTO       L_Lcd_Chr10
L_Lcd_Chr5:
0x019C	0x1283      	BCF        STATUS, 5
0x019D	0x1303      	BCF        STATUS, 6
;__Lib_Lcd.c,74 :: 		
0x019E	0x034E      	DECF       FARG_Lcd_Chr_column, 0
0x019F	0x00F0      	MOVWF      R0
0x01A0	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x01A1	0x07F0      	ADDWF      R0, 1
0x01A2	0x0870      	MOVF       R0, 0
0x01A3	0x00CD      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x01A4	0x14BF      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,77 :: 		
0x01A5	0x0870      	MOVF       R0, 0
0x01A6	0x00D2      	MOVWF      FARG_Lcd_Cmd_out_char
0x01A7	0x212A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x01A8	0x10BF      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,80 :: 		
0x01A9	0x084F      	MOVF       FARG_Lcd_Chr_out_char, 0
0x01AA	0x00D2      	MOVWF      FARG_Lcd_Cmd_out_char
0x01AB	0x212A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x01AC	0x14BF      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x01AD	0x0008      	RETURN
; end of _Lcd_Chr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01AE	0x29C0      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01AF	0x3080      	MOVLW      128
0x01B0	0x1283      	BCF        STATUS, 5
0x01B1	0x1303      	BCF        STATUS, 6
0x01B2	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x01B3	0x29D1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01B4	0x30C0      	MOVLW      192
0x01B5	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x01B6	0x29D1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x01B7	0x3094      	MOVLW      148
0x01B8	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x01B9	0x29D1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x01BA	0x30D4      	MOVLW      212
0x01BB	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x01BC	0x29D1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x01BD	0x3080      	MOVLW      128
0x01BE	0x00CD      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x01BF	0x29D1      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x01C0	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x01C1	0x3A01      	XORLW      1
0x01C2	0x1903      	BTFSC      STATUS, 2
0x01C3	0x29AF      	GOTO       L_Lcd_Out13
0x01C4	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x01C5	0x3A02      	XORLW      2
0x01C6	0x1903      	BTFSC      STATUS, 2
0x01C7	0x29B4      	GOTO       L_Lcd_Out14
0x01C8	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x01C9	0x3A03      	XORLW      3
0x01CA	0x1903      	BTFSC      STATUS, 2
0x01CB	0x29B7      	GOTO       L_Lcd_Out15
0x01CC	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x01CD	0x3A04      	XORLW      4
0x01CE	0x1903      	BTFSC      STATUS, 2
0x01CF	0x29BA      	GOTO       L_Lcd_Out16
0x01D0	0x29BD      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x01D1	0x034E      	DECF       FARG_Lcd_Out_column, 0
0x01D2	0x00F0      	MOVWF      R0
0x01D3	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x01D4	0x07F0      	ADDWF      R0, 1
0x01D5	0x0870      	MOVF       R0, 0
0x01D6	0x00CD      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x01D7	0x0870      	MOVF       R0, 0
0x01D8	0x00D2      	MOVWF      FARG_Lcd_Cmd_out_char
0x01D9	0x212A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x01DA	0x10BF      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x01DB	0x01D0      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x01DC	0x0850      	MOVF       Lcd_Out_i_L0, 0
0x01DD	0x074F      	ADDWF      FARG_Lcd_Out_text, 0
0x01DE	0x0084      	MOVWF      FSR
0x01DF	0x0800      	MOVF       INDF, 0
0x01E0	0x1903      	BTFSC      STATUS, 2
0x01E1	0x29EA      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x01E2	0x0850      	MOVF       Lcd_Out_i_L0, 0
0x01E3	0x074F      	ADDWF      FARG_Lcd_Out_text, 0
0x01E4	0x0084      	MOVWF      FSR
0x01E5	0x0800      	MOVF       INDF, 0
0x01E6	0x00D1      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01E7	0x216A      	CALL       _Lcd_Chr_CP
0x01E8	0x0AD0      	INCF       Lcd_Out_i_L0, 1
0x01E9	0x29DC      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x01EA	0x14BF      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x01EB	0x0008      	RETURN
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x01EC	0x1683      	BSF        STATUS, 5
0x01ED	0x1303      	BCF        STATUS, 6
0x01EE	0x1187      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x01EF	0x1107      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x01F0	0x1207      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x01F1	0x1287      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x01F2	0x1307      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x01F3	0x1387      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x01F4	0x1283      	BCF        STATUS, 5
0x01F5	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x01F6	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x01F7	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x01F8	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x01F9	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x01FA	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x01FB	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x01FC	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x01FD	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x01FE	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x01FF	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x0200	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x0201	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0202	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0203	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0204	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0205	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0206	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0207	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0208	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0209	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x020A	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x020B	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x020C	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x020D	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x020E	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x020F	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x0210	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0211	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x0212	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0213	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0214	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0215	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0216	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0217	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0218	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0219	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x021A	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x021B	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x021C	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x021D	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x021E	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x021F	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0220	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0221	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0222	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0223	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0224	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0225	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0226	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0227	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0228	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0229	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x022A	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x022B	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x022C	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x022D	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x022E	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x022F	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0230	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0231	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0232	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0233	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0234	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0235	0x2117      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0236	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0237	0x211D      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0238	0x14BF      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0239	0x0008      	RETURN
; end of _Lcd_Init
_ByteToHex:
;__Lib_Conversions.c,5 :: 		
;__Lib_Conversions.c,6 :: 		
0x023A	0x1283      	BCF        STATUS, 5
0x023B	0x1303      	BCF        STATUS, 6
0x023C	0x084D      	MOVF       FARG_ByteToHex_input, 0
0x023D	0x00F0      	MOVWF      R0
0x023E	0x0CF0      	RRF        R0, 1
0x023F	0x13F0      	BCF        R0, 7
0x0240	0x0CF0      	RRF        R0, 1
0x0241	0x13F0      	BCF        R0, 7
0x0242	0x0CF0      	RRF        R0, 1
0x0243	0x13F0      	BCF        R0, 7
0x0244	0x0CF0      	RRF        R0, 1
0x0245	0x13F0      	BCF        R0, 7
0x0246	0x3000      	MOVLW      0
0x0247	0x00F1      	MOVWF      R0+1
0x0248	0x302B      	MOVLW      __Lib_Conversions_Digits
0x0249	0x07F0      	ADDWF      R0, 1
0x024A	0x3003      	MOVLW      hi_addr(__Lib_Conversions_Digits)
0x024B	0x1803      	BTFSC      STATUS, 0
0x024C	0x3E01      	ADDLW      1
0x024D	0x07F1      	ADDWF      R0+1, 1
0x024E	0x0870      	MOVF       R0, 0
0x024F	0x00BD      	MOVWF      ___DoICPAddr
0x0250	0x0871      	MOVF       R0+1, 0
0x0251	0x00BE      	MOVWF      ___DoICPAddr+1
0x0252	0x2172      	CALL       _____DoICP
0x0253	0x118A      	BCF        PCLATH, 3
0x0254	0x120A      	BCF        PCLATH, 4
0x0255	0x00F0      	MOVWF      R0
0x0256	0x084E      	MOVF       FARG_ByteToHex_output, 0
0x0257	0x0084      	MOVWF      FSR
0x0258	0x0870      	MOVF       R0, 0
0x0259	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,7 :: 		
0x025A	0x0A4E      	INCF       FARG_ByteToHex_output, 0
0x025B	0x00F2      	MOVWF      R2
0x025C	0x300F      	MOVLW      15
0x025D	0x054D      	ANDWF      FARG_ByteToHex_input, 0
0x025E	0x00F0      	MOVWF      R0
0x025F	0x3000      	MOVLW      0
0x0260	0x00F1      	MOVWF      R0+1
0x0261	0x302B      	MOVLW      __Lib_Conversions_Digits
0x0262	0x07F0      	ADDWF      R0, 1
0x0263	0x3003      	MOVLW      hi_addr(__Lib_Conversions_Digits)
0x0264	0x1803      	BTFSC      STATUS, 0
0x0265	0x3E01      	ADDLW      1
0x0266	0x07F1      	ADDWF      R0+1, 1
0x0267	0x0870      	MOVF       R0, 0
0x0268	0x00BD      	MOVWF      ___DoICPAddr
0x0269	0x0871      	MOVF       R0+1, 0
0x026A	0x00BE      	MOVWF      ___DoICPAddr+1
0x026B	0x2172      	CALL       _____DoICP
0x026C	0x118A      	BCF        PCLATH, 3
0x026D	0x120A      	BCF        PCLATH, 4
0x026E	0x00F0      	MOVWF      R0
0x026F	0x0872      	MOVF       R2, 0
0x0270	0x0084      	MOVWF      FSR
0x0271	0x0870      	MOVF       R0, 0
0x0272	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,8 :: 		
0x0273	0x3002      	MOVLW      2
0x0274	0x074E      	ADDWF      FARG_ByteToHex_output, 0
0x0275	0x0084      	MOVWF      FSR
0x0276	0x0180      	CLRF       INDF
;__Lib_Conversions.c,9 :: 		
L_end_ByteToHex:
0x0277	0x0008      	RETURN
; end of _ByteToHex
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0278	0x2172      	CALL       _____DoICP
0x0279	0x118A      	BCF        PCLATH, 3
0x027A	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x027B	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x027C	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x027D	0x0ABD      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x027E	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x027F	0x0ABE      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0280	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0281	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0282	0x2A78      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0283	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0284	0x3041      	MOVLW      65
0x0285	0x1283      	BCF        STATUS, 5
0x0286	0x1303      	BCF        STATUS, 6
0x0287	0x00A3      	MOVWF      ?lstr1_ir
0x0288	0x3044      	MOVLW      68
0x0289	0x00A4      	MOVWF      36
0x028A	0x3053      	MOVLW      83
0x028B	0x00A5      	MOVWF      37
0x028C	0x303A      	MOVLW      58
0x028D	0x00A6      	MOVWF      38
0x028E	0x3030      	MOVLW      48
0x028F	0x00A7      	MOVWF      39
0x0290	0x3078      	MOVLW      120
0x0291	0x00A8      	MOVWF      40
0x0292	0x3030      	MOVLW      48
0x0293	0x00A9      	MOVWF      41
0x0294	0x3030      	MOVLW      48
0x0295	0x00AA      	MOVWF      42
0x0296	0x3020      	MOVLW      32
0x0297	0x00AB      	MOVWF      43
0x0298	0x3020      	MOVLW      32
0x0299	0x00AC      	MOVWF      44
0x029A	0x3054      	MOVLW      84
0x029B	0x00AD      	MOVWF      45
0x029C	0x3047      	MOVLW      71
0x029D	0x00AE      	MOVWF      46
0x029E	0x304C      	MOVLW      76
0x029F	0x00AF      	MOVWF      47
0x02A0	0x303A      	MOVLW      58
0x02A1	0x00B0      	MOVWF      48
0x02A2	0x3020      	MOVLW      32
0x02A3	0x00B1      	MOVWF      49
0x02A4	0x3030      	MOVLW      48
0x02A5	0x00B2      	MOVWF      50
0x02A6	0x01B3      	CLRF       51
0x02A7	0x3043      	MOVLW      67
0x02A8	0x00B4      	MOVWF      ?lstr2_ir
0x02A9	0x304D      	MOVLW      77
0x02AA	0x00B5      	MOVWF      53
0x02AB	0x3044      	MOVLW      68
0x02AC	0x00B6      	MOVWF      54
0x02AD	0x303A      	MOVLW      58
0x02AE	0x00B7      	MOVWF      55
0x02AF	0x3030      	MOVLW      48
0x02B0	0x00B8      	MOVWF      56
0x02B1	0x3078      	MOVLW      120
0x02B2	0x00B9      	MOVWF      57
0x02B3	0x3030      	MOVLW      48
0x02B4	0x00BA      	MOVWF      58
0x02B5	0x3030      	MOVLW      48
0x02B6	0x00BB      	MOVWF      59
0x02B7	0x01BC      	CLRF       60
;ir.c,109 :: 		void main() {
;ir.c,111 :: 		rc5_ok = 0;
0x02B8	0x103F      	BCF        _rc5_ok, BitPos(_rc5_ok+0)
;ir.c,112 :: 		rc5_state = 0;
0x02B9	0x01C8      	CLRF       _rc5_state
;ir.c,114 :: 		Lcd_Init();                      // Initialize LCD module
0x02BA	0x21EC      	CALL       _Lcd_Init
;ir.c,115 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);        // cursor off
0x02BB	0x300C      	MOVLW      12
0x02BC	0x00D2      	MOVWF      FARG_Lcd_Cmd_out_char
0x02BD	0x212A      	CALL       _Lcd_Cmd
;ir.c,116 :: 		Lcd_Cmd(_LCD_CLEAR);             // clear LCD
0x02BE	0x3001      	MOVLW      1
0x02BF	0x00D2      	MOVWF      FARG_Lcd_Cmd_out_char
0x02C0	0x212A      	CALL       _Lcd_Cmd
;ir.c,117 :: 		TMR1IF_bit = 0;                  // Clear Timer1 overflow interrupt flag bit
0x02C1	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;ir.c,118 :: 		RBIF_bit = 0;                    // Clear PORTB change interrupt flag bit
0x02C2	0x100B      	BCF        RBIF_bit, BitPos(RBIF_bit+0)
;ir.c,119 :: 		TMR1IE_bit = 1;                  // Enable Timer1 overflow interrupt
0x02C3	0x1683      	BSF        STATUS, 5
0x02C4	0x140C      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;ir.c,120 :: 		T1CON = 0x10;                    // Set Timer1 clock source to internal with 1:2 prescaler (Timer1 clock = 1MHz)
0x02C5	0x3010      	MOVLW      16
0x02C6	0x1283      	BCF        STATUS, 5
0x02C7	0x0090      	MOVWF      T1CON
;ir.c,121 :: 		INTCON = 0xC8;                   // Enable global, peripheral and PORTB change interrupts
0x02C8	0x30C8      	MOVLW      200
0x02C9	0x008B      	MOVWF      INTCON
;ir.c,123 :: 		Lcd_Out(1, 1, "ADS:0x00  TGL: 0");
0x02CA	0x3001      	MOVLW      1
0x02CB	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x02CC	0x3001      	MOVLW      1
0x02CD	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x02CE	0x3023      	MOVLW      ?lstr1_ir
0x02CF	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x02D0	0x21AE      	CALL       _Lcd_Out
;ir.c,124 :: 		Lcd_Out(2, 1, "CMD:0x00");
0x02D1	0x3002      	MOVLW      2
0x02D2	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x02D3	0x3001      	MOVLW      1
0x02D4	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x02D5	0x3034      	MOVLW      ?lstr2_ir
0x02D6	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x02D7	0x21AE      	CALL       _Lcd_Out
;ir.c,125 :: 		while(1) {
L_main35:
;ir.c,126 :: 		while(!rc5_ok);                       // Wait until RC5 code receiver
L_main37:
0x02D8	0x183F      	BTFSC      _rc5_ok, BitPos(_rc5_ok+0)
0x02D9	0x2ADB      	GOTO       L_main38
0x02DA	0x2AD8      	GOTO       L_main37
L_main38:
;ir.c,127 :: 		rc5_ok = 0;                           // Reset decoding process
0x02DB	0x103F      	BCF        _rc5_ok, BitPos(_rc5_ok+0)
;ir.c,128 :: 		rc5_state = 0;
0x02DC	0x01C8      	CLRF       _rc5_state
;ir.c,129 :: 		TMR1ON_bit = 0;                       // Disable Timer1
0x02DD	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;ir.c,130 :: 		toggle_bit = rc5_code >> 11;          // Toggle bit is bit number 11
0x02DE	0x300B      	MOVLW      11
0x02DF	0x00F2      	MOVWF      R2
0x02E0	0x0849      	MOVF       _rc5_code, 0
0x02E1	0x00F0      	MOVWF      R0
0x02E2	0x084A      	MOVF       _rc5_code+1, 0
0x02E3	0x00F1      	MOVWF      R0+1
0x02E4	0x0872      	MOVF       R2, 0
L__main62:
0x02E5	0x1903      	BTFSC      STATUS, 2
0x02E6	0x2AEC      	GOTO       L__main63
0x02E7	0x0CF1      	RRF        R0+1, 1
0x02E8	0x0CF0      	RRF        R0, 1
0x02E9	0x13F1      	BCF        R0+1, 7
0x02EA	0x3EFF      	ADDLW      255
0x02EB	0x2AE5      	GOTO       L__main62
L__main63:
0x02EC	0x1870      	BTFSC      R0, 0
0x02ED	0x2AF0      	GOTO       L__main64
0x02EE	0x113F      	BCF        _toggle_bit, BitPos(_toggle_bit+0)
0x02EF	0x2AF1      	GOTO       L__main65
L__main64:
0x02F0	0x153F      	BSF        _toggle_bit, BitPos(_toggle_bit+0)
L__main65:
;ir.c,131 :: 		address = (rc5_code >> 6) & 0x1F;     // Next 5 bits are for address
0x02F1	0x3006      	MOVLW      6
0x02F2	0x00F2      	MOVWF      R2
0x02F3	0x0849      	MOVF       _rc5_code, 0
0x02F4	0x00F0      	MOVWF      R0
0x02F5	0x084A      	MOVF       _rc5_code+1, 0
0x02F6	0x00F1      	MOVWF      R0+1
0x02F7	0x0872      	MOVF       R2, 0
L__main66:
0x02F8	0x1903      	BTFSC      STATUS, 2
0x02F9	0x2AFF      	GOTO       L__main67
0x02FA	0x0CF1      	RRF        R0+1, 1
0x02FB	0x0CF0      	RRF        R0, 1
0x02FC	0x13F1      	BCF        R0+1, 7
0x02FD	0x3EFF      	ADDLW      255
0x02FE	0x2AF8      	GOTO       L__main66
L__main67:
0x02FF	0x301F      	MOVLW      31
0x0300	0x0570      	ANDWF      R0, 0
0x0301	0x00C7      	MOVWF      _address
;ir.c,132 :: 		command = rc5_code & 0x3F;            // The 6 LSBits are command bits
0x0302	0x303F      	MOVLW      63
0x0303	0x0549      	ANDWF      _rc5_code, 0
0x0304	0x00C3      	MOVWF      _command
;ir.c,133 :: 		Lcd_Chr(1, 16, toggle_bit + 48);      // Display toggle bit
0x0305	0x3001      	MOVLW      1
0x0306	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0307	0x3010      	MOVLW      16
0x0308	0x00CE      	MOVWF      FARG_Lcd_Chr_column
0x0309	0x3000      	MOVLW      0
0x030A	0x193F      	BTFSC      _toggle_bit, BitPos(_toggle_bit+0)
0x030B	0x3001      	MOVLW      1
0x030C	0x00CF      	MOVWF      FARG_Lcd_Chr_out_char
0x030D	0x3030      	MOVLW      48
0x030E	0x07CF      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x030F	0x2179      	CALL       _Lcd_Chr
;ir.c,134 :: 		ByteToHex(address, text);             // Save address in string text with hex format
0x0310	0x0847      	MOVF       _address, 0
0x0311	0x00CD      	MOVWF      FARG_ByteToHex_input
0x0312	0x3040      	MOVLW      _text
0x0313	0x00CE      	MOVWF      FARG_ByteToHex_output
0x0314	0x223A      	CALL       _ByteToHex
;ir.c,135 :: 		Lcd_Out(1, 7, text);                  // Display address
0x0315	0x3001      	MOVLW      1
0x0316	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0317	0x3007      	MOVLW      7
0x0318	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0319	0x3040      	MOVLW      _text
0x031A	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x031B	0x21AE      	CALL       _Lcd_Out
;ir.c,136 :: 		ByteToHex(command, text);             // Save command in string text with hex format
0x031C	0x0843      	MOVF       _command, 0
0x031D	0x00CD      	MOVWF      FARG_ByteToHex_input
0x031E	0x3040      	MOVLW      _text
0x031F	0x00CE      	MOVWF      FARG_ByteToHex_output
0x0320	0x223A      	CALL       _ByteToHex
;ir.c,137 :: 		Lcd_Out(2, 7, text);                  // Display command
0x0321	0x3002      	MOVLW      2
0x0322	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0323	0x3007      	MOVLW      7
0x0324	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0325	0x3040      	MOVLW      _text
0x0326	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0327	0x21AE      	CALL       _Lcd_Out
;ir.c,138 :: 		RBIE_bit = 1;                         // Enable PORTB change interrupt
0x0328	0x158B      	BSF        RBIE_bit, BitPos(RBIE_bit+0)
;ir.c,139 :: 		}  }
0x0329	0x2AD8      	GOTO       L_main35
L_end_main:
0x032A	0x2B2A      	GOTO       $+0
; end of _main
;__Lib_Conversions.c,3 :: __Lib_Conversions_Digits
0x032B	0x3430 ;__Lib_Conversions_Digits+0
0x032C	0x3431 ;__Lib_Conversions_Digits+1
0x032D	0x3432 ;__Lib_Conversions_Digits+2
0x032E	0x3433 ;__Lib_Conversions_Digits+3
0x032F	0x3434 ;__Lib_Conversions_Digits+4
0x0330	0x3435 ;__Lib_Conversions_Digits+5
0x0331	0x3436 ;__Lib_Conversions_Digits+6
0x0332	0x3437 ;__Lib_Conversions_Digits+7
0x0333	0x3438 ;__Lib_Conversions_Digits+8
0x0334	0x3439 ;__Lib_Conversions_Digits+9
0x0335	0x3441 ;__Lib_Conversions_Digits+10
0x0336	0x3442 ;__Lib_Conversions_Digits+11
0x0337	0x3443 ;__Lib_Conversions_Digits+12
0x0338	0x3444 ;__Lib_Conversions_Digits+13
0x0339	0x3445 ;__Lib_Conversions_Digits+14
0x033A	0x3446 ;__Lib_Conversions_Digits+15
; end of __Lib_Conversions_Digits
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [268]    _Interrupt
0x0110       [7]    _Delay_50us
0x0117       [6]    _Delay_1us
0x011D      [13]    _Delay_5500us
0x012A      [64]    _Lcd_Cmd
0x016A       [8]    _Lcd_Chr_CP
0x0172       [7]    _____DoICP
0x0179      [53]    _Lcd_Chr
0x01AE      [62]    _Lcd_Out
0x01EC      [78]    _Lcd_Init
0x023A      [62]    _ByteToHex
0x0278      [12]    ___CC2DW
0x0284     [167]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [0]    RC7_bit
0x0007       [0]    RC6_bit
0x0007       [0]    LCD_EN
0x0007       [0]    RC3_bit
0x0007       [0]    LCD_D4
0x0007       [0]    RC2_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC5_bit
0x0007       [0]    LCD_D7
0x0007       [0]    LCD_RS
0x0007       [0]    LCD_D5
0x0007       [0]    LCD_D6
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000B       [0]    RBIF_bit
0x000B       [0]    RBIE_bit
0x000C       [0]    TMR1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0010       [0]    TMR1ON_bit
0x0023      [17]    ?lstr1_ir
0x0034       [9]    ?lstr2_ir
0x003D       [2]    ___DoICPAddr
0x003F       [0]    _rc5_ok
0x003F       [0]    __Lib_Lcd_cmd_status
0x003F       [0]    _toggle_bit
0x0040       [3]    _text
0x0043       [1]    _command
0x0044       [1]    _i
0x0045       [2]    _timer_value
0x0047       [1]    _address
0x0048       [1]    _rc5_state
0x0049       [2]    _rc5_code
0x004B       [1]    ___saveSTATUS
0x004C       [1]    ___savePCLATH
0x004D       [1]    FARG_Lcd_Out_row
0x004D       [1]    FARG_Lcd_Chr_row
0x004D       [1]    FARG_ByteToHex_input
0x004E       [1]    FARG_ByteToHex_output
0x004E       [1]    FARG_Lcd_Chr_column
0x004E       [1]    FARG_Lcd_Out_column
0x004F       [1]    FARG_Lcd_Out_text
0x004F       [1]    FARG_Lcd_Chr_out_char
0x0050       [1]    Lcd_Out_i_L0
0x0051       [1]    FARG_Lcd_Chr_CP_out_char
0x0052       [1]    FARG_Lcd_Cmd_out_char
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [0]    LCD_D7_Direction
0x0087       [0]    LCD_D6_Direction
0x0087       [0]    LCD_EN_Direction
0x0087       [0]    LCD_RS_Direction
0x0087       [0]    LCD_D5_Direction
0x0087       [0]    LCD_D4_Direction
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC7_bit
0x008C       [0]    TMR1IE_bit
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x032B      [16]    __Lib_Conversions_Digits
